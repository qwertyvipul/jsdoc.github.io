"use strict";(self.webpackChunkjsdoc_github_io=self.webpackChunkjsdoc_github_io||[]).push([[5898],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>y});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var i=a.createContext({}),l=function(t){var e=a.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},p=function(t){var e=l(t.components);return a.createElement(i.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,i=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),u=l(n),m=r,y=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(y,s(s({ref:e},p),{},{components:n})):a.createElement(y,s({ref:e},p))}));function y(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,s=new Array(o);s[0]=m;var c={};for(var i in e)hasOwnProperty.call(e,i)&&(c[i]=e[i]);c.originalType=t,c[u]="string"==typeof t?t:r,s[1]=c;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1865:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={tag:"constant",description:"Document an object as a constant.",synonyms:["const"],related:["tags-default.html","tags-type.html"]},s=void 0,c={unversionedId:"tags-constant",id:"tags-constant",title:"tags-constant",description:"Document an object as a constant.",source:"@site/docs/tags-constant.md",sourceDirName:".",slug:"/tags-constant",permalink:"/tags-constant",draft:!1,tags:[],version:"current",frontMatter:{tag:"constant",description:"Document an object as a constant.",synonyms:["const"],related:["tags-default.html","tags-type.html"]},sidebar:"docsSidebar",previous:{title:"tags-classdesc",permalink:"/tags-classdesc"},next:{title:"tags-constructs",permalink:"/tags-constructs"}},i={},l=[{value:"Syntax",id:"syntax",level:2},{value:"Overview",id:"overview",level:2},{value:"Examples",id:"examples",level:2}],p={toc:l},u="wrapper";function d(t){let{components:e,...n}=t;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@constant [<type> <name>]")),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The @constant tag is used to mark the documentation as belonging to a symbol that is a constant."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"In this example we are documenting a string constant. Note that although the code is using the\n",(0,r.kt)("inlineCode",{parentName:"p"},"const")," keyword, this is not required by JSDoc. If your JavaScript host environment doesn't yet\nsupport constant declarations, the @const documentation can just as effectively be used on ",(0,r.kt)("inlineCode",{parentName:"p"},"var"),"\ndeclarations."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"A string constant representing the color red"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/** @constant\n    @type {string}\n    @default\n*/\nconst RED = 'FF0000';\n\n/** @constant {number} */\nvar ONE = 1;\n")),(0,r.kt)("p",null,"Note that the example provides the type in a @type tag. This is optional. Also the optional\n@default tag is used here too, this will automatically add whatever the assigned value is (for\nexample 'FF0000') to the documentation."))}d.isMDXComponent=!0}}]);