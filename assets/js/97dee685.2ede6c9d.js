"use strict";(self.webpackChunkjsdoc_github_io=self.webpackChunkjsdoc_github_io||[]).push([[2727],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=o,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},145:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={tag:"enum",description:"Document a collection of related properties.",related:["tags-property.html"]},i=void 0,l={unversionedId:"tags-enum",id:"tags-enum",title:"tags-enum",description:"Document a collection of related properties.",source:"@site/docs/tags-enum.md",sourceDirName:".",slug:"/tags-enum",permalink:"/jsdoc.github.io/tags-enum",draft:!1,tags:[],version:"current",frontMatter:{tag:"enum",description:"Document a collection of related properties.",related:["tags-property.html"]},sidebar:"docsSidebar",previous:{title:"tags-description",permalink:"/jsdoc.github.io/tags-description"},next:{title:"tags-event",permalink:"/jsdoc.github.io/tags-event"}},s={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Overview",id:"overview",level:2},{value:"Examples",id:"examples",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"syntax"},"Syntax"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@enum [<type>]")),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"The @enum tag documents a collection of static properties whose values are all of the same type."),(0,o.kt)("p",null,"An enum is similar a collection of properties, except that an enum is documented in its own doc\ncomment, whereas properties are documented within the doc comment of their container. Often this tag\nis used with @readonly, as an enum typically represents a collection of constants."),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,'This shows how to document an object that represents a value with three possible states. Note that\nthe enum members can have optional descriptions added if you wish. Also you can override the type,\nas is shown with "MAYBE" -- by default enum members will be documented with the same type as the\nenum itself.'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"A numeric enum, representing three states"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * Enum for tri-state values.\n * @readonly\n * @enum {number}\n */\nvar triState = {\n    /** The true value */\n    TRUE: 1,\n    FALSE: -1,\n    /** @type {boolean} */\n    MAYBE: true\n};\n")))}m.isMDXComponent=!0}}]);