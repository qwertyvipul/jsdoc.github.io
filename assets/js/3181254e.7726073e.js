"use strict";(self.webpackChunkjsdoc_github_io=self.webpackChunkjsdoc_github_io||[]).push([[8545],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),d=s,h=p["".concat(l,".").concat(d)]||p[d]||m[d]||r;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:s,o[1]=i;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5846:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(7462),s=(n(7294),n(3905));const r={title:"ES 2015 Classes",description:"How to add JSDoc comments to ECMAScript 2015 classes.",related:["tags-augments.html"]},o=void 0,i={unversionedId:"howto-es2015-classes",id:"howto-es2015-classes",title:"ES 2015 Classes",description:"How to add JSDoc comments to ECMAScript 2015 classes.",source:"@site/docs/howto-es2015-classes.md",sourceDirName:".",slug:"/howto-es2015-classes",permalink:"/jsdoc.github.io/howto-es2015-classes",draft:!1,tags:[],version:"current",frontMatter:{title:"ES 2015 Classes",description:"How to add JSDoc comments to ECMAScript 2015 classes.",related:["tags-augments.html"]},sidebar:"docsSidebar",previous:{title:"License",permalink:"/jsdoc.github.io/about-license-jsdoc3"},next:{title:"ES 2015 Modules",permalink:"/jsdoc.github.io/howto-es2015-modules"}},l={},c=[{value:"Documenting a simple class",id:"documenting-a-simple-class",level:2},{value:"Extending classes",id:"extending-classes",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,s.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"JSDoc 3 makes it easy to document classes that follow the ",(0,s.kt)("a",{parentName:"p",href:"http://www.ecma-international.org/ecma-262/6.0/#sec-class-definitions"},"ECMAScript 2015\nspecification"),". You don't need to use tags such as ",(0,s.kt)("inlineCode",{parentName:"p"},"@class")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"@constructor")," with\nES 2015 classes\u2014JSDoc automatically identifies classes and their constructors simply by parsing your\ncode. ES 2015 classes are supported in JSDoc 3.4.0 and later."),(0,s.kt)("h2",{id:"documenting-a-simple-class"},"Documenting a simple class"),(0,s.kt)("p",null,"The following example shows how to document a simple class with a constructor, two instance methods,\nand one static method:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Simple ES 2015 class"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"/** Class representing a point. */\nclass Point {\n    /**\n     * Create a point.\n     * @param {number} x - The x value.\n     * @param {number} y - The y value.\n     */\n    constructor(x, y) {\n        // ...\n    }\n\n    /**\n     * Get the x value.\n     * @return {number} The x value.\n     */\n    getX() {\n        // ...\n    }\n\n    /**\n     * Get the y value.\n     * @return {number} The y value.\n     */\n    getY() {\n        // ...\n    }\n\n    /**\n     * Convert a string containing two comma-separated numbers into a point.\n     * @param {string} str - The string containing two comma-separated numbers.\n     * @return {Point} A Point object.\n     */\n    static fromString(str) {\n        // ...\n    }\n}\n")),(0,s.kt)("p",null,"You can also document classes that are defined in a class expression, which assigns the class to a\nvariable or constant:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"ES 2015 class expression"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"/** Class representing a point. */\nconst Point = class {\n    // and so on\n}\n")),(0,s.kt)("h2",{id:"extending-classes"},"Extending classes"),(0,s.kt)("p",null,"When you use the ",(0,s.kt)("inlineCode",{parentName:"p"},"extends")," keyword to extend an existing class, you also need to tell JSDoc which\nclass you're extending. You do this with the ",(0,s.kt)("a",{parentName:"p",href:"tags-augments"},(0,s.kt)("inlineCode",{parentName:"a"},"@augments")," (or ",(0,s.kt)("inlineCode",{parentName:"a"},"@extends"),") tag"),"."),(0,s.kt)("p",null,"For example, to extend the ",(0,s.kt)("inlineCode",{parentName:"p"},"Point")," class shown above:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Extending an ES 2015 class"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * Class representing a dot.\n * @extends Point\n */\nclass Dot extends Point {\n    /**\n     * Create a dot.\n     * @param {number} x - The x value.\n     * @param {number} y - The y value.\n     * @param {number} width - The width of the dot, in pixels.\n     */\n    constructor(x, y, width) {\n        // ...\n    }\n\n    /**\n     * Get the dot's width.\n     * @return {number} The dot's width, in pixels.\n     */\n    getWidth() {\n        // ...\n    }\n}\n")))}m.isMDXComponent=!0}}]);