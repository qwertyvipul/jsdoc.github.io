"use strict";(self.webpackChunkjsdoc_github_io=self.webpackChunkjsdoc_github_io||[]).push([[7264],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=i,f=d["".concat(c,".").concat(m)]||d[m]||s[m]||a;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2307:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const a={title:"Including a README File",description:"How to include a README file in your documentation."},o=void 0,l={unversionedId:"about-including-readme",id:"about-including-readme",title:"Including a README File",description:"How to include a README file in your documentation.",source:"@site/docs/about-including-readme.md",sourceDirName:".",slug:"/about-including-readme",permalink:"/about-including-readme",draft:!1,tags:[],version:"current",frontMatter:{title:"Including a README File",description:"How to include a README file in your documentation."},sidebar:"docsSidebar",previous:{title:"Including a Package File",permalink:"/about-including-package"},next:{title:"License",permalink:"/about-license-jsdoc3"}},c={},u=[{value:"Examples",id:"examples",level:2}],p={toc:u},d="wrapper";function s(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"There are two ways to incorporate a ",(0,i.kt)("inlineCode",{parentName:"p"},"README")," file into your documentation:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"In the source paths to your JavaScript files, include the path to a Markdown file named\n",(0,i.kt)("inlineCode",{parentName:"li"},"README.md"),". JSDoc will use the first ",(0,i.kt)("inlineCode",{parentName:"li"},"README.md")," file that it finds in your source paths."),(0,i.kt)("li",{parentName:"ol"},"Run JSDoc with the ",(0,i.kt)("inlineCode",{parentName:"li"},"-R/--readme")," command-line option, specifying the path to your ",(0,i.kt)("inlineCode",{parentName:"li"},"README")," file.\nThis option is available in JSDoc 3.3.0 and later. The ",(0,i.kt)("inlineCode",{parentName:"li"},"README")," file may have any name and\nextension, but it must be in Markdown format.")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"-R/--readme")," command-line option takes precedence over your source paths. If you use the\n",(0,i.kt)("inlineCode",{parentName:"p"},"-R/--readme")," command-line option, JSDoc will ignore any ",(0,i.kt)("inlineCode",{parentName:"p"},"README.md")," files in your source paths."),(0,i.kt)("p",null,"If you are using JSDoc's default template, the ",(0,i.kt)("inlineCode",{parentName:"p"},"README")," file's contents will be rendered in HTML\nin the generated documentation's ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html")," file."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Including a README file in your source paths"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"jsdoc path/to/js path/to/readme/README.md\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Using the -R/--readme option"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"jsdoc --readme path/to/readme/README path/to/js\n")))}s.isMDXComponent=!0}}]);