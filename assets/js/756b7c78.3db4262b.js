"use strict";(self.webpackChunkjsdoc_github_io=self.webpackChunkjsdoc_github_io||[]).push([[9250],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return t?a.createElement(f,s(s({ref:n},p),{},{components:t})):a.createElement(f,s({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5096:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const i={tag:"augments",description:"Indicate that a symbol inherits from, and adds to, a parent symbol.",synonyms:["extends"],related:["tags-borrows.html","tags-class.html","tags-mixes.html","tags-mixin.html"]},s=void 0,o={unversionedId:"tags-augments",id:"tags-augments",title:"tags-augments",description:"Indicate that a symbol inherits from, and adds to, a parent symbol.",source:"@site/docs/tags-augments.md",sourceDirName:".",slug:"/tags-augments",permalink:"/tags-augments",draft:!1,tags:[],version:"current",frontMatter:{tag:"augments",description:"Indicate that a symbol inherits from, and adds to, a parent symbol.",synonyms:["extends"],related:["tags-borrows.html","tags-class.html","tags-mixes.html","tags-mixin.html"]},sidebar:"docsSidebar",previous:{title:"tags-async",permalink:"/tags-async"},next:{title:"tags-author",permalink:"/tags-author"}},l={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Overview",id:"overview",level:2},{value:"Examples",id:"examples",level:2}],p={toc:c},u="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@augments <namepath>")),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@augments")," or",(0,r.kt)("inlineCode",{parentName:"p"}," @extends")," tag indicates that a symbol inherits from, and potentially adds to, a\nparent symbol. You can use this tag to document both class-based and prototype-based inheritance."),(0,r.kt)("p",null,"In JSDoc 3.3.0 and later, if a symbol inherits from multiple parents, and both parents have\nidentically named members, JSDoc uses the documentation from the last parent that is listed in the\nJSDoc comment."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"In the following example, the ",(0,r.kt)("inlineCode",{parentName:"p"},"Duck")," class is defined as a subclass of ",(0,r.kt)("inlineCode",{parentName:"p"},"Animal"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"Duck")," instances\nhave the same properties as ",(0,r.kt)("inlineCode",{parentName:"p"},"Animal")," instances, as well as a ",(0,r.kt)("inlineCode",{parentName:"p"},"speak")," method that is unique to ",(0,r.kt)("inlineCode",{parentName:"p"},"Duck"),"\ninstances."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Documenting a class/subclass relationship"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @constructor\n */\nfunction Animal() {\n    /** Is this animal alive? */\n    this.alive = true;\n}\n\n/**\n * @constructor\n * @augments Animal\n */\nfunction Duck() {}\nDuck.prototype = new Animal();\n\n/** What do ducks say? */\nDuck.prototype.speak = function() {\n    if (this.alive) {\n        alert('Quack!');\n    }\n};\n\nvar d = new Duck();\nd.speak(); // Quack!\nd.alive = false;\nd.speak(); // (nothing)\n")),(0,r.kt)("p",null,"In the following example, the ",(0,r.kt)("inlineCode",{parentName:"p"},"Duck")," class inherits from both the ",(0,r.kt)("inlineCode",{parentName:"p"},"Flyable")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Bird")," classes, both\nof which define a ",(0,r.kt)("inlineCode",{parentName:"p"},"takeOff")," method. Because the documentation for ",(0,r.kt)("inlineCode",{parentName:"p"},"Duck")," lists ",(0,r.kt)("inlineCode",{parentName:"p"},"@augments Bird"),"\nlast, JSDoc automatically documents ",(0,r.kt)("inlineCode",{parentName:"p"},"Duck#takeOff")," using the comment from ",(0,r.kt)("inlineCode",{parentName:"p"},"Bird#takeOff"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Multiple inheritance with duplicated method names"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'/**\n * Abstract class for things that can fly.\n * @class\n */\nfunction Flyable() {\n    this.canFly = true;\n}\n\n/** Take off. */\nFlyable.prototype.takeOff = function() {\n    // ...\n};\n\n/**\n * Abstract class representing a bird.\n * @class\n */\nfunction Bird(canFly) {\n    this.canFly = canFly;\n}\n\n/** Spread your wings and fly, if possible. */\nBird.prototype.takeOff = function() {\n    if (this.canFly) {\n        this._spreadWings()\n            ._run()\n            ._flapWings();\n    }\n};\n\n/**\n * Class representing a duck.\n * @class\n * @augments Flyable\n * @augments Bird\n */\nfunction Duck() {}\n\n// Described in the docs as "Spread your wings and fly, if possible."\nDuck.prototype.takeOff = function() {\n    // ...\n};\n')))}m.isMDXComponent=!0}}]);