"use strict";(self.webpackChunkjsdoc_github_io=self.webpackChunkjsdoc_github_io||[]).push([[8271],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),i=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=i(e.components);return a.createElement(m.Provider,{value:t},e.children)},c="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,m=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=i(n),u=r,f=c["".concat(m,".").concat(u)]||c[u]||b[u]||o;return n?a.createElement(f,l(l({ref:t},p),{},{components:n})):a.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=u;var s={};for(var m in t)hasOwnProperty.call(t,m)&&(s[m]=t[m]);s.originalType=e,s[c]="string"==typeof e?e:r,l[1]=s;for(var i=2;i<o;i++)l[i]=n[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7417:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>b,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var a=n(7462),r=(n(7294),n(3905));const o={tag:"memberof",description:"This symbol belongs to a parent symbol.",related:["tags-name.html"]},l=void 0,s={unversionedId:"tags-memberof",id:"tags-memberof",title:"tags-memberof",description:"This symbol belongs to a parent symbol.",source:"@site/docs/tags-memberof.md",sourceDirName:".",slug:"/tags-memberof",permalink:"/tags-memberof",draft:!1,tags:[],version:"current",frontMatter:{tag:"memberof",description:"This symbol belongs to a parent symbol.",related:["tags-name.html"]},sidebar:"docsSidebar",previous:{title:"tags-member",permalink:"/tags-member"},next:{title:"tags-mixes",permalink:"/tags-mixes"}},m={},i=[{value:"Syntax",id:"syntax",level:2},{value:"Overview",id:"overview",level:2},{value:"Examples",id:"examples",level:2}],p={toc:i},c="wrapper";function b(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@memberof <parentNamepath>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@memberof! <parentNamepath>"))),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The @memberof tag identifies a member symbol that belongs to a parent symbol."),(0,r.kt)("p",null,"By default, the @memberof tag documents member symbols as static members. For inner and instance\nmembers, you can use scoping punctuation after the namepath, or you can add the ",(0,r.kt)("a",{parentName:"p",href:"tags-inner"},"@inner"),"\nor ",(0,r.kt)("a",{parentName:"p",href:"tags-instance"},"@instance")," tag."),(0,r.kt)("p",null,'The "forced" @memberof tag, @memberof!, forces the object to be documented as belonging to a specific\nparent even if it appears to have a different parent.'),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"In the following example, the ",(0,r.kt)("inlineCode",{parentName:"p"},"hammer")," function would normally be documented as a global function.\nThat's because, in fact, it is a global function, but it is also a member of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Tools")," namespace,\nand that's how you wish to document it. The solution is to add a @memberof tag:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Using @memberof"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/** @namespace */\nvar Tools = {};\n\n/** @memberof Tools */\nvar hammer = function() {\n};\n\nTools.hammer = hammer;\n")),(0,r.kt)("p",null,'For instance members of a class, use the syntax "@memberof ClassName.prototype" or "@memberof\nClassName#". Alternatively, you can combine "@memberof ClassName" with the "@instance" tag.'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Using @memberof with a class prototype"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/** @class Observable */\ncreate(\n    'Observable',\n    {\n        /**\n         * This will be a static member, Observable.cache.\n         * @memberof Observable\n         */\n        cache: [],\n\n        /**\n         * This will be an instance member, Observable#publish.\n         * @memberof Observable.prototype\n         */\n        publish: function(msg) {},\n\n        /**\n         * This will also be an instance member, Observable#save.\n         * @memberof Observable#\n         */\n        save: function() {},\n\n        /**\n         * This will also be an instance member, Observable#end.\n         * @memberof Observable\n         * @instance\n         */\n        end: function() {}\n    }\n);\n")),(0,r.kt)("p",null,'The following example uses the forced @memberof tag, "@memberof!", to document a property of an\nobject (Data#point) that is an instance member of a class (Data).'),(0,r.kt)("p",null,'When you use the @property tag to document a property, you cannot link to the property using its\nlongname. We can force the property to be linkable by using "@alias" and "@memberof!" to tell JSDoc\nthat Data#point.y should be documented as a member "point.y" of "Data#", rather than a member "y" of\n"point" of "Data#".'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Using @memberof! for object properties"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/** @class */\nfunction Data() {\n    /**\n     * @type {object}\n     * @property {number} y This will show up as a property of `Data#point`,\n     * but you cannot link to the property as {@link Data#point.y}.\n     */\n    this.point = {\n        /**\n         * The @alias and @memberof! tags force JSDoc to document the\n         * property as `point.x` (rather than `x`) and to be a member of\n         * `Data#`. You can link to the property as {@link Data#point.x}.\n         * @alias point.x\n         * @memberof! Data#\n         */\n        x: 0,\n        y: 1\n    };\n}\n")))}b.isMDXComponent=!0}}]);