"use strict";(self.webpackChunkjsdoc_github_io=self.webpackChunkjsdoc_github_io||[]).push([[682],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,f=u["".concat(s,".").concat(d)]||u[d]||p[d]||i;return n?r.createElement(f,o(o({ref:t},m),{},{components:n})):r.createElement(f,o({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7707:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={tag:"mixin",description:"Document a mixin object.",related:["tags-borrows.html","tags-class.html","tags-mixes.html"]},o=void 0,l={unversionedId:"tags-mixin",id:"tags-mixin",title:"tags-mixin",description:"Document a mixin object.",source:"@site/docs/tags-mixin.md",sourceDirName:".",slug:"/tags-mixin",permalink:"/tags-mixin",draft:!1,tags:[],version:"current",frontMatter:{tag:"mixin",description:"Document a mixin object.",related:["tags-borrows.html","tags-class.html","tags-mixes.html"]},sidebar:"docsSidebar",previous:{title:"tags-mixes",permalink:"/tags-mixes"},next:{title:"tags-module",permalink:"/tags-module"}},s={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Overview",id:"overview",level:2},{value:"Examples",id:"examples",level:2}],m={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"@mixin [<MixinName>]")),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"A mixin provides functionality that is intended to be added to other objects. If desired, you can\nuse the @mixin tag to indicate that an object is a mixin. You can then add the @mixes tag to objects\nthat use the mixin."),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Using @mixin"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * This provides methods used for event handling. It's not meant to\n * be used directly.\n *\n * @mixin\n */\nvar Eventful = {\n    /**\n     * Register a handler function to be called whenever this event is fired.\n     * @param {string} eventName - Name of the event.\n     * @param {function(Object)} handler - The handler to call.\n     */\n    on: function(eventName, handler) {\n        // code...\n    },\n\n    /**\n     * Fire an event, causing all handlers for that event name to run.\n     * @param {string} eventName - Name of the event.\n     * @param {Object} eventData - The data provided to each handler.\n     */\n    fire: function(eventName, eventData) {\n        // code...\n    }\n};\n")))}p.isMDXComponent=!0}}]);