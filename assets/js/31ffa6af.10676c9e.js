"use strict";(self.webpackChunkjsdoc_github_io=self.webpackChunkjsdoc_github_io||[]).push([[1555],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,k=u["".concat(d,".").concat(c)]||u[c]||s[c]||o;return n?a.createElement(k,i(i({ref:t},m),{},{components:n})):a.createElement(k,i({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8480:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={title:"Command-line arguments to JSDoc",description:"About command-line arguments to JSDoc.",related:["about-configuring-jsdoc.html"]},i=void 0,l={unversionedId:"about-commandline",id:"about-commandline",title:"Command-line arguments to JSDoc",description:"About command-line arguments to JSDoc.",source:"@site/docs/about-commandline.md",sourceDirName:".",slug:"/about-commandline",permalink:"/jsdoc.github.io/about-commandline",draft:!1,tags:[],version:"current",frontMatter:{title:"Command-line arguments to JSDoc",description:"About command-line arguments to JSDoc.",related:["about-configuring-jsdoc.html"]},sidebar:"docsSidebar",previous:{title:"Using namepaths with JSDoc 3",permalink:"/jsdoc.github.io/about-namepaths"},next:{title:"Configuring JSDoc with a configuration file",permalink:"/jsdoc.github.io/about-configuring-jsdoc"}},d={},p=[{value:"Examples",id:"examples",level:2}],m={toc:p},u="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"At its most basic level, JSDoc is used like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/path/to/jsdoc yourSourceCodeFile.js anotherSourceCodeFile.js ...\n")),(0,r.kt)("p",null,"where ",(0,r.kt)("inlineCode",{parentName:"p"},"...")," are paths to other files to generate documentation for."),(0,r.kt)("p",null,"Additionally, one may provide the path to a ",(0,r.kt)("a",{parentName:"p",href:"http://daringfireball.net/projects/markdown/"},"Markdown file"),' (ending in ".md") or a file\nnamed "README", and this will be added to the documentation on the front page. See ',(0,r.kt)("a",{parentName:"p",href:"about-including-readme"},"these\ninstructions"),"."),(0,r.kt)("p",null,"JSDoc supports a number of command-line options, many of which have both long and short forms.\nAlternatively, the command-line options may be ",(0,r.kt)("a",{parentName:"p",href:"about-configuring-jsdoc"},"specified in a configuration file"),"\ngiven to JSDoc. The command-line options are:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-a <value>"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--access <value>")),(0,r.kt)("td",{parentName:"tr",align:null},"Only display symbols with the given ",(0,r.kt)("inlineCode",{parentName:"td"},"access")," property: ",(0,r.kt)("inlineCode",{parentName:"td"},"private"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"protected"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"public"),", or ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined"),", or ",(0,r.kt)("inlineCode",{parentName:"td"},"all")," for all access levels. By default, all except ",(0,r.kt)("inlineCode",{parentName:"td"},"private")," symbols are shown.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-c <value>"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--configure <value>")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to a JSDoc ",(0,r.kt)("a",{parentName:"td",href:"about-configuring-jsdoc"},"configuration file"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"conf.json")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"conf.json.EXAMPLE")," in the directory where JSDoc is installed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-d <value>"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--destination <value>")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to the output folder for the generated documentation. For JSDoc's built-in Haruki template, use ",(0,r.kt)("inlineCode",{parentName:"td"},"console")," to dump data to the console. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"./out"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--debug")),(0,r.kt)("td",{parentName:"tr",align:null},"Log information that can help debug issues in JSDoc itself.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-e <value>"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--encoding <value>")),(0,r.kt)("td",{parentName:"tr",align:null},"Assume this encoding when reading all source files. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"utf8"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-h"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--help")),(0,r.kt)("td",{parentName:"tr",align:null},"Display information about JSDoc's command-line options, then exit.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--match <value>")),(0,r.kt)("td",{parentName:"tr",align:null},"Only run tests whose names contain ",(0,r.kt)("inlineCode",{parentName:"td"},"value"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--nocolor")),(0,r.kt)("td",{parentName:"tr",align:null},"When running tests, do not use color in the console output. On Windows, this option is enabled by default.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-p"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--private")),(0,r.kt)("td",{parentName:"tr",align:null},"Include symbols marked with the ",(0,r.kt)("a",{parentName:"td",href:"tags-private"},(0,r.kt)("inlineCode",{parentName:"a"},"@private")," tag")," in the generated documentation. By default, private symbols are not included.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--package")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"package.json")," file that contains the project name, version, and other details. Defaults to the first ",(0,r.kt)("inlineCode",{parentName:"td"},"package.json")," file found in the source paths.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--pedantic")),(0,r.kt)("td",{parentName:"tr",align:null},"Treat errors as fatal errors, and treat warnings as errors. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-q <value>"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--query <value>")),(0,r.kt)("td",{parentName:"tr",align:null},"A query string to parse and store in the global variable ",(0,r.kt)("inlineCode",{parentName:"td"},"env.opts.query"),". Example: ",(0,r.kt)("inlineCode",{parentName:"td"},"foo=bar&baz=true"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-r"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--recurse")),(0,r.kt)("td",{parentName:"tr",align:null},"Recurse into subdirectories when scanning for source files and tutorials.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-R"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--readme")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"README.md")," file to include in the generated documentation. Defaults to the first ",(0,r.kt)("inlineCode",{parentName:"td"},"README.md")," file found in the source paths.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-t <value>"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--template <value>")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to the template to use for generating output. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"templates/default"),", JSDoc's built-in default template.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-T"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--test")),(0,r.kt)("td",{parentName:"tr",align:null},"Run JSDoc's test suite, and print the results to the console.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-u <value>"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--tutorials <value>")),(0,r.kt)("td",{parentName:"tr",align:null},"Directory in which JSDoc should search for tutorials. If omitted, no tutorial pages will be generated. See the ",(0,r.kt)("a",{parentName:"td",href:"about-tutorials"},"tutorial instructions")," for more information.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-v"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--version")),(0,r.kt)("td",{parentName:"tr",align:null},"Displays JSDoc's version number, then exits.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--verbose")),(0,r.kt)("td",{parentName:"tr",align:null},"Log detailed information to the console as JSDoc runs. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-X"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--explain")),(0,r.kt)("td",{parentName:"tr",align:null},"Dump all doclets to the console in JSON format, then exit.")))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"Generate documentation for files in the ",(0,r.kt)("inlineCode",{parentName:"p"},"./src")," directory, using the configuration file\n",(0,r.kt)("inlineCode",{parentName:"p"},"/path/to/my/conf.json"),", and save the output in the ",(0,r.kt)("inlineCode",{parentName:"p"},"./docs")," directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/path/to/jsdoc src -r -c /path/to/my/conf.json -d docs\n")),(0,r.kt)("p",null,"Run all JSDoc tests whose names include the word ",(0,r.kt)("inlineCode",{parentName:"p"},"tag"),", and log information about each test:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/path/to/jsdoc -T --match tag --verbose\n")))}s.isMDXComponent=!0}}]);