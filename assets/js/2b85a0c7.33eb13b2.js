"use strict";(self.webpackChunkjsdoc_github_io=self.webpackChunkjsdoc_github_io||[]).push([[8721],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?o.createElement(g,i(i({ref:t},u),{},{components:n})):o.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8592:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const a={title:"Getting Started with JSDoc 3",description:"A quick-start to documenting JavaScript with JSDoc."},i=void 0,c={unversionedId:"about-getting-started",id:"about-getting-started",title:"Getting Started with JSDoc 3",description:"A quick-start to documenting JavaScript with JSDoc.",source:"@site/docs/about-getting-started.md",sourceDirName:".",slug:"/about-getting-started",permalink:"/jsdoc.github.io/about-getting-started",draft:!1,tags:[],version:"current",frontMatter:{title:"Getting Started with JSDoc 3",description:"A quick-start to documenting JavaScript with JSDoc."},sidebar:"docsSidebar",next:{title:"Using namepaths with JSDoc 3",permalink:"/jsdoc.github.io/about-namepaths"}},s={},l=[{value:"Getting started",id:"getting-started",level:2},{value:"Adding documentation comments to your code",id:"adding-documentation-comments-to-your-code",level:2},{value:"Generating a website",id:"generating-a-website",level:2}],u={toc:l},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"getting-started"},"Getting started"),(0,r.kt)("p",null,"JSDoc 3 is an API documentation generator for JavaScript, similar to Javadoc or phpDocumentor. You\nadd documentation comments directly to your source code, right alongside the code itself. The JSDoc\ntool will scan your source code and generate an HTML documentation website for you."),(0,r.kt)("h2",{id:"adding-documentation-comments-to-your-code"},"Adding documentation comments to your code"),(0,r.kt)("p",null,"JSDoc's purpose is to document the API of your JavaScript application or library. It is assumed that\nyou will want to document things like modules, namespaces, classes, methods, method parameters, and\nso on."),(0,r.kt)("p",null,"JSDoc comments should generally be placed immediately before the code being documented. Each comment\nmust start with a ",(0,r.kt)("inlineCode",{parentName:"p"},"/**")," sequence in order to be recognized by the JSDoc parser. Comments beginning\nwith ",(0,r.kt)("inlineCode",{parentName:"p"},"/*"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"/***"),", or more than 3 stars will be ignored. This is a feature to allow you to suppress\nparsing of comment blocks."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"The simplest documentation is just a description"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/** This is a description of the foo function. */\nfunction foo() {}\n")),(0,r.kt)("p",null,"Adding a description is simple\u2014just type the description you want in the documentation comment."),(0,r.kt)("p",null,'Special "JSDoc tags" can be used to give more information. For example, if the function is a\nconstructor for a class, you can indicate this by adding a ',(0,r.kt)("inlineCode",{parentName:"p"},"@constructor")," tag."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Use a JSDoc tag to describe your code"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * Represents a book.\n * @constructor\n */\nfunction Book(title, author) {}\n")),(0,r.kt)("p",null,"More tags can be used to add more information. See the ",(0,r.kt)("a",{parentName:"p",href:"index.html#block-tags"},"home page")," for a complete list\nof tags that are recognized by JSDoc 3."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Adding more information with tags"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * Represents a book.\n * @constructor\n * @param {string} title - The title of the book.\n * @param {string} author - The author of the book.\n */\nfunction Book(title, author) {}\n")),(0,r.kt)("h2",{id:"generating-a-website"},"Generating a website"),(0,r.kt)("p",null,"Once your code is commented, you can use the JSDoc 3 tool to generate an HTML website from your\nsource files."),(0,r.kt)("p",null,'By default, JSDoc uses the built-in "default" template to turn the documentation into HTML. You can\nedit this template to suit your own needs or create an entirely new template if that is what you\nprefer.'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Running the documentation generator on the command line"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"jsdoc book.js\n")),(0,r.kt)("p",null,"This command will create a directory named ",(0,r.kt)("inlineCode",{parentName:"p"},"out/")," in the current working directory. Within that\ndirectory, you will find the generated HTML pages."))}p.isMDXComponent=!0}}]);